/**
 * Mini-projet : version dynamique Ã©co-conÃ§ue du site
 
Objectif : ajouter une interaction utile mais sobre au site HTML/CSS existant.
 
FonctionnalitÃ©s demandÃ©es
 
Menu burger fonctionnel (DOM + eventListener)
 
ThÃ¨me clair/sombre persistant via localStorage
 
Chargement diffÃ©rÃ© des images secondaires
 
Compteur dâ€™Ã©conomies : afficher le poids total Ã©conomisÃ© avec capture d'Ã©cran
 */

// ðŸ”¹ On rÃ©cupÃ¨re le thÃ¨me enregistrÃ© dans le stockage local du navigateur (si lâ€™utilisateur en a choisi un prÃ©cÃ©demment)
let theme = localStorage.getItem('theme');
if (theme === 'dark') {
  document.body.classList.add('dark');
}



// ðŸ”¹ Quand toute la page (HTML) est chargÃ©e, on exÃ©cute ce code
document.addEventListener('DOMContentLoaded', () => {

  // On sÃ©lectionne les Ã©lÃ©ments HTML nÃ©cessaires
  const header = document.querySelector('header'); // Le haut de la page
  const nav = document.querySelector('nav');       // Le menu de navigation


  // --- CrÃ©ation du bouton "burger" (menu mobile) ---
  const burger = document.createElement('button'); // CrÃ©e un bouton HTML
  burger.type = 'button';                          // DÃ©finit son type
  burger.textContent = 'MENU â˜°';                        // Ajoute le symbole du menu (3 barres)
  burger.className = 'burger';                     // Ajoute une classe CSS (utile pour le style)
  burger.setAttribute('aria-label', 'Ouvrir le menu'); // AccessibilitÃ© : indique sa fonction aux lecteurs dâ€™Ã©cran
  header.appendChild(burger);                      // On ajoute le bouton dans le header


  // --- Gestion du clic sur le burger ---
  burger.addEventListener('click', () => {
    // Si la nav est fermÃ©e â†’ on lâ€™ouvre ; si elle est ouverte â†’ on la ferme
    nav.classList.toggle('active');
  });

  // --- Fermer le menu si on clique sur un lien ou un <li> ---
  nav.addEventListener('click', (e) => {
    // VÃ©rifie si le clic a eu lieu sur un lien <a> ou un Ã©lÃ©ment de liste <li>
    if (e.target.closest('a, li')) {
      nav.classList.remove('active'); // On ferme le menu
    }
  });


  // --- Fermer le menu si on clique nâ€™importe oÃ¹ ailleurs sur la page ---
  document.addEventListener('click', (e) => {
    // Si le clic nâ€™est pas Ã  lâ€™intÃ©rieur du menu nav ET pas sur le burger
    if (!nav.contains(e.target) && !burger.contains(e.target)) {
      nav.classList.remove('active'); // On ferme la nav
    }
  });


  // --- CrÃ©ation du bouton "mode sombre / clair" ---
  let modeSombre = document.createElement('button');
  let footer = document.querySelector('footer');
  modeSombre.innerHTML = "ðŸŒ“";
  footer.appendChild(modeSombre);

  // Ajoute un "Ã©couteur d'Ã©vÃ©nement" (eventListener) sur le bouton
  modeSombre.addEventListener('click', () => {

    // Active ou dÃ©sactive la classe "dark" sur le <body>.
    document.body.classList.toggle('dark');                 // classList.toggle() â†’ change le thÃ¨me instantanÃ©ment.

    if (document.body.classList.contains('dark')) {
      localStorage.setItem('theme', 'dark');              // localStorage â†’ garde le choix mÃªme aprÃ¨s rechargement de la page.
    } else {
      localStorage.setItem('theme', 'light');
    }
  });


});







